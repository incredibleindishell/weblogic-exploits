# import modules needed.
import socket 

from socket import error as socket_error
from netaddr import IPNetwork


def make_connection(url, port):
		try:
			server_address = (url, port)

			print 'INFO: Attempting Connection: ' + str(server_address) + '\n'

			sock = socket.create_connection(server_address, 4)
			sock.settimeout(2)

			# construct a header to send to server. 
			#headers = 't3 12.1.20\nAS:255\nHL:19\nMS:10000000\nPU:t3://' + str(url) + ':' + str(port) + '\n\n'
			headers = 't3 12.2.1\nAS:255\nHL:19\n\n'
			sock.sendall(headers)

			data = ""

			try:
				data = sock.recv(1024)
			except socket.timeout:
				print 'ERROR: Socket Timeout Occurred: ' + str(url) + ':' + str(port) + '\n'
			
			sock.close()

			return data


		except socket_error:
			print 'ERROR: Connection Failed: ' + str(url) + ':' + str(port) + '\n'
			return ""

# this function scans for vulnerability in weblogic servers.
def weblogic(url):

	global results_file

	weblogic_versions = ['10.3.6.0', '12.1.2.0', '12.1.3.0', '12.2.1.0']
	weblogic_ports = [7001,9013,9010,9081,8022]

	stop_flag = False 

	for port in weblogic_ports:

		if stop_flag == True:
			stop_flag = False
			break

		for i in range(0, 10):

			data = make_connection(url, port)

			print 
			if data.strip() == 'HELO':
				print 'INFO: Sever only returned HELO, retrying to get server version.'
				continue

			if data == "":
				break


			if 'HELO' in data:

				# this is where we expect the weblogic version to be found.
				found_weblogic_version = data[5:13]

				is_vulnerable = False

				for version in weblogic_versions:
					if found_weblogic_version == version:
						is_vulnerable = True
					if found_weblogic_version == '':
						found_weblogic_version = 'Unknown'
						is_vulnerable = 'Unknown'


				print 'WebLogic Server Found: ' + str(url) + ':' + str(port)
				print 'WebLogic Server Version: ' + str(found_weblogic_version)
				print 'WebLogic Server Vulnerable: ' + str(is_vulnerable) + '\n\n'
				print data

				# persist results to output file.
				results_file.write('WebLogic Server Found: ' + str(url) + ':' + str(port) + '\n')
				results_file.write('WebLogic Server Version: ' + str(found_weblogic_version) + '\n')
				results_file.write('WebLogic Server Vulnerable: ' + str(is_vulnerable) + '\n\n\n')

				stop_flag = True

				break



if __name__ == '__main__':

	# store results of scan in this file. 
	results_file = open('custom_script_results.txt', 'w')

	# fetch file with target ip addresses.
	targets_file = open('targets.txt', 'r')

	# strip new line characters and spaces.
	targets = targets_file.readlines()
	targets = [target.strip() for target in targets]

	# run weblogic scan on each target.
	for target in targets:
		for server_ip in IPNetwork(target):
			weblogic(str(server_ip))

